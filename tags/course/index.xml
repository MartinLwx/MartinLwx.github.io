<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Course on MartinLwx&#39;s blog</title>
    <link>https://martinlwx.github.io/tags/course/</link>
    <description>Recent content in Course on MartinLwx&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Jan 2022 01:09:06 +0800</lastBuildDate><atom:link href="https://martinlwx.github.io/tags/course/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>the solutions for exercise07 of Missingsemester 2020</title>
      <link>https://martinlwx.github.io/post/exercise07-missingsemester-2020/</link>
      <pubDate>Mon, 03 Jan 2022 01:09:06 +0800</pubDate>
      
      <guid>https://martinlwx.github.io/post/exercise07-missingsemester-2020/</guid>
      <description>debugging  Use journalctl on Linux or log show on macOS to get the super user accesses and commands in the last day. If there arenâ€™t any you can execute some harmless commands such as sudo ls and check again.
 When I run log show --last 1d, it keeps running for along time. I don&amp;rsquo;t know how long it make take, so I will just execute harmless sudo ls to check the log.</description>
    </item>
    
    <item>
      <title>the solutions for exercise 05&amp;06 of MIT.Missing-semester(2020)</title>
      <link>https://martinlwx.github.io/post/exercise05-06-missingsemester-2020/</link>
      <pubDate>Mon, 27 Dec 2021 14:28:33 +0800</pubDate>
      
      <guid>https://martinlwx.github.io/post/exercise05-06-missingsemester-2020/</guid>
      <description>Lecture05. Command-line Environment  Job control  From what we have seen, we can use some ps aux | grep commands to get our jobsâ€™ pids and then kill them, but there are better ways to do it. Start a sleep 10000 job in a terminal, background it with Ctrl-Z and continue its execution with bg. Now use pgrep to find its pid and pkill to kill it without ever typing the pid itself.</description>
    </item>
    
    <item>
      <title>the solutions for exercise 03&amp;04 of MIT.Missing-semester(2020)</title>
      <link>https://martinlwx.github.io/post/exercise03-04-missingsemester-2020/</link>
      <pubDate>Sun, 26 Dec 2021 00:19:54 +0800</pubDate>
      
      <guid>https://martinlwx.github.io/post/exercise03-04-missingsemester-2020/</guid>
      <description>Lecture 03. Editors (Vim)  Complete vimtutor. Note: it looks best in a 80x24 (80 columns by 24 lines) terminal window.
 It is a tutorial for beginners of vim. I will just put some notes which are not mentioned in course here.
  U command: When we press u in normal mode, we can undo the last command. What U does is fixing a whole line.
  Ctrl + G: show your location in the file and the file status.</description>
    </item>
    
    <item>
      <title>the solutions for exercise 01&amp;02 of MIT. Missing-semester(2020)</title>
      <link>https://martinlwx.github.io/post/exercise01-02-missingsemester-2020/</link>
      <pubDate>Sat, 18 Dec 2021 10:11:22 +0800</pubDate>
      
      <guid>https://martinlwx.github.io/post/exercise01-02-missingsemester-2020/</guid>
      <description>Lecture 01. Shell   Create a new directory called missing under /tmp
 1  &amp;gt; mkdir -p /tmp/missing   ðŸ“’ -p means Create intermediate directories as required
 Use touch to create a new file called semester in missing.
 1 2  &amp;gt; cd ~/tmp/missing &amp;gt; touch semester    Write the following into that file, one line at a time:
1 2  #!/bin/sh curl --head --silent https://missing.</description>
    </item>
    
  </channel>
</rss>

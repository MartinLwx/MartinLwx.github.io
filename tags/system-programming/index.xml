<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>System-programming - Tag - MartinLwx&#39;s blog</title>
        <link>https://martinlwx.github.io/tags/system-programming/</link>
        <description>System-programming - Tag - MartinLwx&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>martinlwx@163.com (MartinLwx)</managingEditor>
            <webMaster>martinlwx@163.com (MartinLwx)</webMaster><lastBuildDate>Mon, 19 Sep 2022 19:01:04 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/tags/system-programming/" rel="self" type="application/rss+xml" /><item>
    <title>What is stack and heap</title>
    <link>https://martinlwx.github.io/what-is-the-heap-and-stack/</link>
    <pubDate>Mon, 19 Sep 2022 19:01:04 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/what-is-the-heap-and-stack/</guid>
    <description><![CDATA[Intro If you&rsquo;ve been using dynamic languages like Python, Javascript, etc., you probably won&rsquo;t notice the difference between stack and heap. Because these languages have garbage collectors (GCs) that will automatically manage memory for you, you just need to program at a high level without considering the details. The bad news is that GC is not a cost-free design. No matter how well designed a GC algorithm is, the performance of the code will be degraded to some extent.]]></description>
</item>
</channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Program-Analysis - 分类 - MartinLwx&#39;s Blog</title>
        <link>https://martinlwx.github.io/zh-cn/categories/program-analysis/</link>
        <description>Program-Analysis - 分类 - MartinLwx&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>&lt;a rel=&#34;license noopener&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34; target=&#34;_blank&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;</copyright><lastBuildDate>Tue, 18 Feb 2025 23:13:42 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/zh-cn/categories/program-analysis/" rel="self" type="application/rss+xml" /><item>
    <title>三地址码(3AC/TAC)是什么</title>
    <link>https://martinlwx.github.io/zh-cn/three-address-code/</link>
    <pubDate>Tue, 18 Feb 2025 23:13:42 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/three-address-code/</guid>
    <description><![CDATA[<h2 id="什么是三地址码" class="headerLink">
    <a href="#%e4%bb%80%e4%b9%88%e6%98%af%e4%b8%89%e5%9c%b0%e5%9d%80%e7%a0%81" class="header-mark" aria-label="Header mark for '什么是三地址码'"></a>什么是三地址码</h2><p>三地址码（Three-Address Code，也简记为 3AC/TAC）是一种程序的中间表示（Intermediate Representation，IR），通常用在编译器、程序分析当中。顾名思义，三地址码的每一条指令<em>最多</em>只有三个“地址”，这里的“地址”包括变量、常量。常见的形式包括下面几种 <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>]]></description>
</item><item>
    <title>Tree-sitter 以及它的 Query 功能</title>
    <link>https://martinlwx.github.io/zh-cn/tree-sitter-and-its-query/</link>
    <pubDate>Sat, 07 Sep 2024 11:29:44 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/tree-sitter-and-its-query/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>Tree-sitter 是一个 Parse Generator，也就是用来生成 Parser 的。除此之外，它还提供了一些额外的功能，比如今天要聊到的 Tree-sitter Query ，Query 提供了一套基于 S 表达式的 DSL（Domain Specific Language），可以查询 AST，获得你想要的信息，在正式学习如何使用 Query 前，我们先讲一些相关的背景知识，好让这个文章尽量是 Self-contained 的</p>]]></description>
</item></channel>
</rss>

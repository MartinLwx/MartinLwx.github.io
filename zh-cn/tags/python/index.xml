<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Python - 标签 - MartinLwx&#39;s blog</title>
        <link>https://martinlwx.github.io/zh-cn/tags/python/</link>
        <description>Python - 标签 - MartinLwx&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>martinlwx@163.com (MartinLwx)</managingEditor>
            <webMaster>martinlwx@163.com (MartinLwx)</webMaster><lastBuildDate>Fri, 21 Apr 2023 10:18:16 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/zh-cn/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>CS61A 的项目四之 Scheme 解释器实现 (2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</link>
    <pubDate>Fri, 21 Apr 2023 10:18:16 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</guid>
    <description><![CDATA[引言 最近正在跟着《Crafting interpreter》这本书写解释器，原本书里面用 Java 实现了一个 Tree-walker 解释器 jlox，我正在用 Python 重写一遍，称为]]></description>
</item>
<item>
    <title>Python 的类型提示：是什么以及为什么</title>
    <link>https://martinlwx.github.io/zh-cn/type-hints-in-python/</link>
    <pubDate>Fri, 13 Jan 2023 16:18:09 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/type-hints-in-python/</guid>
    <description><![CDATA[引言 一开始吸引我学习 Python 的是它的动态语言特性，以及它的鸭子类型（Duck typing）系统——我们不关心具体的类型是什么，我们只关心它的行为。]]></description>
</item>
<item>
    <title>Python 3.5 的解包操作符</title>
    <link>https://martinlwx.github.io/zh-cn/unpacking-in-python/</link>
    <pubDate>Mon, 05 Dec 2022 23:16:33 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/unpacking-in-python/</guid>
    <description><![CDATA[这一篇博客一开始是写在 jupyter notebook 里面而后转成 markdown 的。如果想要访问和运行本来的 notebook，请查阅这个仓库 引言 今天我想要聊聊 Python 中用于解包（Unpa]]></description>
</item>
<item>
    <title>f-strings in Python 3.6</title>
    <link>https://martinlwx.github.io/zh-cn/f-strings-in-python/</link>
    <pubDate>Wed, 16 Nov 2022 22:15:00 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/f-strings-in-python/</guid>
    <description><![CDATA[这一篇博客一开始是写在 jupyter notebook 里面而后转成 markdown 的。如果想要访问和运行本来的 notebook，请查阅这个仓库 引言 字符串格式化绝对可以算得上日常生活中]]></description>
</item>
<item>
    <title>海象表达式简明教程（Python 3.8）</title>
    <link>https://martinlwx.github.io/zh-cn/walrus-operator-in-python/</link>
    <pubDate>Sat, 29 Oct 2022 23:35:31 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/walrus-operator-in-python/</guid>
    <description><![CDATA[这一篇博客一开始是写在 jupyter notebook 里面而后转成 markdown 的。如果想要访问和运行本来的 notebook，请查阅这个仓库 引言 今天要说的是在 Python3.8 中引入的新特性：海象]]></description>
</item>
<item>
    <title>模式匹配简明教程（Python 3.10）</title>
    <link>https://martinlwx.github.io/zh-cn/pattern-matching-in-python/</link>
    <pubDate>Sun, 16 Oct 2022 11:23:17 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/pattern-matching-in-python/</guid>
    <description><![CDATA[这一篇博客一开始是写在 jupyter notebook 里面而后转成 markdown 的。如果想要访问和运行本来的 notebook，请查阅这个仓库 引言 今天我想要谈一下 Python 3.10 提出的新特性1—]]></description>
</item>
<item>
    <title>CS61A 的项目三之 Ants vs SomeBees 实现 (2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/proj3.ants-vs-somebees-of-cs61a-of-ucb/</link>
    <pubDate>Thu, 10 Mar 2022 21:43:59 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/proj3.ants-vs-somebees-of-cs61a-of-ucb/</guid>
    <description><![CDATA[Intro 前两个项目还算简单, 比较不复杂. 但是今天这个第三个项目难度确实是上升了(看游戏规则就知道这个有多复杂了). 感觉像是植物大战僵尸 所以我打算为]]></description>
</item>
<item>
    <title>Lab14 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/lab14-cs61a-of-ucb/</link>
    <pubDate>Thu, 03 Mar 2022 08:17:14 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/lab14-cs61a-of-ucb/</guid>
    <description><![CDATA[Trees Q1: Prune Min Write a function that prunes a Tree t mutatively. t and its branches always have zero or two branches. For the trees with two branches, reduce the number of branches from two to one by keeping the branch that has the smaller label value. Do nothing with trees with zero branches. Prune the tree in a direction of your choosing (top down or bottom up). The]]></description>
</item>
<item>
    <title>Lab09 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/lab09-cs61a-of-ucb/</link>
    <pubDate>Sat, 26 Feb 2022 13:09:24 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/lab09-cs61a-of-ucb/</guid>
    <description><![CDATA[Recursion and Tree Recursion Q1: Subsequences A subsequence of a sequence S is a subset of elements from S, in the same order they appear in S. Consider the list [1, 2, 3]. Here are a few of it&rsquo;s subsequences [], [1, 3], [2], and [1, 2, 3]. Write a function that takes in a list and returns all possible subsequences of that list. The subsequences should be returned as]]></description>
</item>
<item>
    <title>Lab08 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/lab08-cs61a-of-ucb/</link>
    <pubDate>Thu, 24 Feb 2022 20:22:51 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/lab08-cs61a-of-ucb/</guid>
    <description><![CDATA[Q2: Convert Link Write a function convert_link that takes in a linked list and returns the sequence as a Python list. You may assume that the input list is shallow; that is none of the elements is another linked list. Try to find both an iterative and recursive solution for this problem! 迭代的算法很简单, 我们只要创建一个 result]]></description>
</item>
</channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Python - 标签 - MartinLwx&#39;s Blog</title>
        <link>https://martinlwx.github.io/zh-cn/tags/python/</link>
        <description>Python - 标签 - MartinLwx&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>&lt;a rel=&#34;license noopener&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34; target=&#34;_blank&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;</copyright><lastBuildDate>Sat, 17 Aug 2024 12:30:43 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/zh-cn/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>@dataclass 简明教程（Python3.7）</title>
    <link>https://martinlwx.github.io/zh-cn/learn-to-use-dataclass-in-python/</link>
    <pubDate>Sat, 17 Aug 2024 12:30:43 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/learn-to-use-dataclass-in-python/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>Python 的 tuple 很好用，它可以让我们快速地将<em>不同类型</em>的值<em>封装</em>在一起，作为一个整体进行管理，自带的排序规则也十分直观，简单易用。但实际用下来我发现，一旦 tuple 的字段<em>比较多</em>，我就<em>被迫</em>要自己写一下注释注明一下<em>不同位置</em>的字段的具体含义是啥，比如</p>]]></description>
</item><item>
    <title>CS61A 的项目四之 Scheme 解释器实现 (2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</link>
    <pubDate>Fri, 21 Apr 2023 10:18:16 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>最近正在跟着<a href="https://craftinginterpreters.com/" target="_blank" rel="noopener noreferrer">《Crafting interpreter》</a>这本书写解释器，原本书里面用 Java 实现了一个 Tree-walker 解释器 jlox，我正在用 Python 重写一遍，称为 <a href="https://github.com/MartinLwx/pylox" target="_blank" rel="noopener noreferrer">pylox</a>。看了这本书感觉对解释器的理解越来越深刻了，很推荐👍。此时的我突然想起来之前看完的 CS61A 的 Scheme 解释器还有几个小问题没有解决，导致它一直是未完成的状态，于是今天我打开了这个项目，打算从头到尾捋一遍，讲讲思路。</p>]]></description>
</item><item>
    <title>Python 的类型提示：是什么以及为什么</title>
    <link>https://martinlwx.github.io/zh-cn/type-hints-in-python/</link>
    <pubDate>Fri, 13 Jan 2023 16:18:09 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/type-hints-in-python/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>一开始吸引我学习 Python 的是它的动态语言特性，以及它的<strong>鸭子类型（Duck typing）系统——我们不关心具体的类型是什么，我们只关心它的行为</strong>。得益于 Python 的动态语言特性，我们不需要声明具体类型，这很大程度上加快了开发速度，而且去掉了不少心智负担，再加上强大的第三方库支持，Python 成为了我最爱用的编程语言😺</p>]]></description>
</item><item>
    <title>Python 3.5 的解包操作符</title>
    <link>https://martinlwx.github.io/zh-cn/unpacking-in-python/</link>
    <pubDate>Mon, 05 Dec 2022 23:16:33 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/unpacking-in-python/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>今天我想要聊聊 Python 中用于解包（Unpacking）的两个操作符号——<code>*</code> 和 <code>**</code></p>
<h2 id="基本用法" class="headerLink">
    <a href="#%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95" class="header-mark" aria-label="Header mark for '基本用法'"></a>基本用法</h2><p><code>*</code> 最为常见的用法是用来表示乘法。但我们也可以将 <code>*</code> 用于任意一个可迭代对象（iterable object）<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>上，表示我们想要提取里面所有的值</p>]]></description>
</item><item>
    <title>Python3.6 的 f-strings</title>
    <link>https://martinlwx.github.io/zh-cn/f-strings-in-python/</link>
    <pubDate>Wed, 16 Nov 2022 22:15:00 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/f-strings-in-python/</guid>
    <description><![CDATA[<div class="details admonition info open">
    <div class="details-summary admonition-title">
        <span class="icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"/></svg></span>信息<span class="details-icon"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"/></svg></span>
    </div>
    <div class="details-content">
        <div class="admonition-content"><p><strong>更新</strong>：</p>]]></description>
</item><item>
    <title>海象表达式简明教程（Python 3.8）</title>
    <link>https://martinlwx.github.io/zh-cn/walrus-operator-in-python/</link>
    <pubDate>Sat, 29 Oct 2022 23:35:31 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/walrus-operator-in-python/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>今天要说的是在 Python3.8 中引入的新特性：海象运算符（Walrus operator），这是一个备受争议的特性，但它最后还是通过并发布了🤔</p>]]></description>
</item><item>
    <title>模式匹配简明教程（Python 3.10）</title>
    <link>https://martinlwx.github.io/zh-cn/pattern-matching-in-python/</link>
    <pubDate>Sun, 16 Oct 2022 11:23:17 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/pattern-matching-in-python/</guid>
    <description><![CDATA[<h2 id="引言" class="headerLink">
    <a href="#%e5%bc%95%e8%a8%80" class="header-mark" aria-label="Header mark for '引言'"></a>引言</h2><p>今天我想要谈一下 Python 3.10 提出的新特性<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>——模式匹配🎉</p>
<p>学习过 C 语言的人想必对下面的 <code>switch</code> 语句不陌生，</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">c</p>]]></description>
</item><item>
    <title>CS61A 的项目三之 Ants vs SomeBees 实现 (2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/proj3.ants-vs-somebees-of-cs61a-of-ucb/</link>
    <pubDate>Thu, 10 Mar 2022 21:43:59 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/proj3.ants-vs-somebees-of-cs61a-of-ucb/</guid>
    <description><![CDATA[<h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark" aria-label="Header mark for 'Intro'"></a>Intro</h2><hr>
<p>前两个项目还算简单, 比较不复杂. 但是今天这个第三个项目难度确实是上升了(看游戏规则就知道这个有多复杂了). 感觉像是植物大战僵尸</p>
<p>所以我打算为他写一篇博客来整理一下写代码时候的思路. 话不多说, 让我们进入正题吧 !</p>]]></description>
</item><item>
    <title>Lab14 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/lab14-cs61a-of-ucb/</link>
    <pubDate>Thu, 03 Mar 2022 08:17:14 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/lab14-cs61a-of-ucb/</guid>
    <description><![CDATA[<h2 id="trees" class="headerLink">
    <a href="#trees" class="header-mark" aria-label="Header mark for 'Trees'"></a>Trees</h2><hr>
<h3 id="q1-prune-min" class="headerLink">
    <a href="#q1-prune-min" class="header-mark" aria-label="Header mark for 'Q1: Prune Min'"></a>Q1: Prune Min</h3><blockquote>
  <p>Write a function that prunes a <code>Tree</code> <code>t</code> mutatively. <code>t</code> and its branches always have zero or two branches. For the trees with two branches, reduce the number of branches from two to one by keeping the branch that has the smaller label value. Do nothing with trees with zero branches.</p>
<p>Prune the tree in a direction of your choosing (top down or bottom up). The result should be a linear tree.</p>]]></description>
</item><item>
    <title>Lab12 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/zh-cn/lab12-ca61a-of-ucb/</link>
    <pubDate>Wed, 02 Mar 2022 11:15:08 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/zh-cn/lab12-ca61a-of-ucb/</guid>
    <description><![CDATA[<h2 id="regular-expressions" class="headerLink">
    <a href="#regular-expressions" class="header-mark" aria-label="Header mark for 'Regular Expressions'"></a>Regular Expressions</h2><hr>
<h3 id="q1-calculator-ops" class="headerLink">
    <a href="#q1-calculator-ops" class="header-mark" aria-label="Header mark for 'Q1: Calculator Ops'"></a>Q1: Calculator Ops</h3><blockquote>
  <p>Write a regular expression that parses strings written in the 61A Calculator language and returns any expressions which have two numeric operands, leaving out the parentheses around them.</p>

</blockquote><p>写一个符合 <code>(operand operator1 operator2)</code> 格式的正则表达式. 这个是比较简单的, 因为这里的运算符只有 <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. 我们用 <code>[]</code> 括起来就可以, 但是要注意**<code>-</code> 需要用 <code>\</code> 转义**</p>]]></description>
</item></channel>
</rss>

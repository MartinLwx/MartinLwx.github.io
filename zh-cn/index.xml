<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MartinLwx&#39;s blog</title>
        <link>https://martinlwx.github.io/zh-cn/</link>
        <description>Welcome to my blog :)</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>martinlwx@163.com (MartinLwx)</managingEditor>
            <webMaster>martinlwx@163.com (MartinLwx)</webMaster><lastBuildDate>Wed, 16 Aug 2023 22:23:26 &#43;0800</lastBuildDate>
            <atom:link href="https://martinlwx.github.io/zh-cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>TF-IDF Ê®°Âûã</title>
    <link>https://martinlwx.github.io/zh-cn/an-introduction-of-tf-idf-model/</link>
    <pubDate>Wed, 16 Aug 2023 22:23:26 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/an-introduction-of-tf-idf-model/</guid>
    <description><![CDATA[‰ªÄ‰πàÊòØ TF-IDF Ê®°Âûã Âú®‰πãÂâçÁöÑÊñáÁ´†‰∏≠Ë∞àÂà∞‰∫ÜËØçË¢ãÊ®°ÂûãÔºå‰πüËÆ≤Âà∞‰∫ÜÂÆÉÁöÑËÆ∏Â§ö‰∏çË∂≥ÔºåÂú®‰ªäÂ§©ÁöÑËøôÁØáÊñáÁ´†‰∏≠ÔºåÊàë‰ª¨Ë¶ÅÂ∞ùËØïËß£ÂÜ≥ËØçË¢ãÊ®°ÂûãÁöÑÁº∫ÁÇπ‰πã‰∏ÄÔºöÊØè‰∏™ËØçÁöÑÈáçË¶ÅÊÄßÊòØ‰∏ÄÊ†∑ÁöÑ]]></description>
</item>
<item>
    <title>ËØçË¢ãÊ®°Âûã</title>
    <link>https://martinlwx.github.io/zh-cn/an-introduction-of-bag-of-word-model/</link>
    <pubDate>Fri, 11 Aug 2023 18:55:09 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/an-introduction-of-bag-of-word-model/</guid>
    <description><![CDATA[‰ªÄ‰πàÊòØËØçË¢ãÊ®°Âûã Âú® NLP ‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÂ∞ÜÊñáÊ°£ÔºàdocumentÔºâË°®Á§∫‰∏∫ÂêëÈáèÔºåËøôÊòØÂõ†‰∏∫Êú∫Âô®Â≠¶‰π†Âè™ËÉΩÂ§üÂ§ÑÁêÜÊï∞Â≠ó„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÊàë‰ª¨Ë¶ÅÊâæÂà∞‰∏ãÈù¢Ëøô‰πà‰∏Ä‰∏™Á•ûÂ•áÁöÑÂáΩ]]></description>
</item>
<item>
    <title>Êú∫Âô®Â≠¶‰π†Ê±ÇËß£Ê¢ØÂ∫¶ÁöÑÂ∞èÊäÄÂ∑ß</title>
    <link>https://martinlwx.github.io/zh-cn/a-trick-to-calculating-partial-derivatives-in-ml/</link>
    <pubDate>Wed, 26 Jul 2023 00:31:50 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/a-trick-to-calculating-partial-derivatives-in-ml/</guid>
    <description><![CDATA[ÂºïË®Ä ‰πüËÆ∏‰Ω†ÂíåÊàë‰∏ÄÊ†∑Âú®Ê±ÇËß£Êú∫Âô®Â≠¶‰π†ÁöÑÊ¢ØÂ∫¶Êó∂ÊúâÂêÑÁßçÂõ∞ÈöæÔºåÂç≥‰ΩøÁúãÁùÄÁõ∏ÂÖ≥ÁöÑ Cookbook ‰∏ÄËæπÊé®ÂØº‰æùÁÑ∂ÊòØÊúâÂõ∞ÊÉëÔºå‰ªäÂ§©ÊàëË¶ÅÂàÜ‰∫´ÁöÑÊòØÊúÄËøëÂ≠¶‰π†Âà∞ÁöÑ‰∏Ä‰∏™ÂÆûÁî®ÊäÄÂ∑ßÔºöÂú®Êú∫Âô®Â≠¶]]></description>
</item>
<item>
    <title>Pytorch Âº†ÈáèÁöÑ strides Ê†ºÂºèÊòØ‰ªÄ‰πà</title>
    <link>https://martinlwx.github.io/zh-cn/how-to-reprensent-a-tensor-or-ndarray/</link>
    <pubDate>Fri, 14 Jul 2023 15:26:16 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/how-to-reprensent-a-tensor-or-ndarray/</guid>
    <description><![CDATA[ÂºïË®Ä Â∞ΩÁÆ°ÊàëÂ∑≤Áªè‰ΩøÁî® Numpy Âíå Pytorch Â•ΩÈïø‰∏ÄÊÆµÊó∂Èó¥‰∫ÜÔºå‰ΩÜÊàë‰∏ÄÁõ¥‰∏çÁü•ÈÅì‰ªñ‰ª¨ÊòØÂ¶Ç‰ΩïÂÆûÁé∞Â∫ïÂ±ÇÁöÑÂº†ÈáèÔºàtensorÔºâÔºåËÄå‰∏îËøô‰πàÈ´òÊïà„ÄÇÊúÄËøëÂú®Áúã Deep Learning Systems ËøôÈó®ËØæÔºåÁªà‰∫éÊúâÊú∫]]></description>
</item>
<item>
    <title>Â¶Ç‰ΩïËÆ∞ÂøÜÁ∫¢ÈªëÊ†ëÁöÑÊìç‰Ωú</title>
    <link>https://martinlwx.github.io/zh-cn/how-to-memorize-insertion-and-deletion-in-rb-tree/</link>
    <pubDate>Sat, 01 Jul 2023 17:12:40 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/how-to-memorize-insertion-and-deletion-in-rb-tree/</guid>
    <description><![CDATA[ÂºïË®Ä Â¶ÇÊûú‰Ω†ÁÇπËøõ‰∫ÜËøô‰∏ÄÁØáÊñáÁ´†ÔºåÁõ∏‰ø°‰Ω†‰πüË∑üÊàë‰∏ÄÊ†∑ÔºöÁ∫¢ÈªëÊ†ëÂ≠¶‰∏ÄÊ¨°Âøò‰∏ÄÊ¨°ÔºåÂèàË¶ÅÂÅöÊ†ëÁöÑÊóãËΩ¨ÔºåÂèàË¶ÅÁªôËäÇÁÇπÈáçÊñ∞‰∏äËâ≤ÔºåÂØºËá¥ÊØèÊ¨°ÈÉΩÊòØÂ≠¶ÂÆå‰∫ÜÂ∞±ÂøòËÆ∞„ÄÇÊàë‰πüÊõæÁªè‰ªîÁªÜ]]></description>
</item>
<item>
    <title>Git Bundle ÊåáÂçó</title>
    <link>https://martinlwx.github.io/zh-cn/git-bundle-tutorial/</link>
    <pubDate>Fri, 16 Jun 2023 23:48:28 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/git-bundle-tutorial/</guid>
    <description><![CDATA[git bundle ÊòØ‰ªÄ‰πà git bundle ÊòØ‰∏Ä‰∏™ÊØîËæÉÂ∞ëÁúãÂà∞ÁöÑ git ÂëΩ‰ª§ÔºåÂÆÉÁöÑ‰ΩúÁî®ÊòØÊää‰∏Ä‰∏™ git ‰ªìÂ∫ìÊâìÂåÖüì¶Êàê‰∏Ä‰∏™Êñá‰ª∂ÔºåÁÑ∂ÂêéÂà´‰∫∫ÂèØ‰ª•ÈÄöËøáËøô‰∏™Êñá‰ª∂ËøòÂéüÂá∫Êú¨Êù•ÁöÑ git ‰ªìÂ∫ìÔºåËÄå‰∏î git bundle ËøòÊîØÊåÅÂ¢û]]></description>
</item>
<item>
    <title>Áî® MPNN Ê°ÜÊû∂Ëß£ËØª GAT</title>
    <link>https://martinlwx.github.io/zh-cn/understanding-graph-attention-network-through-mpnn/</link>
    <pubDate>Sun, 21 May 2023 15:20:50 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/understanding-graph-attention-network-through-mpnn/</guid>
    <description><![CDATA[‰ªÄ‰πàÊòØ MPNN Ê°ÜÊû∂ Justin Gilmer ÊèêÂá∫‰∫Ü MPNNÔºàMessage Passing Neural NetworkÔºâÊ°ÜÊû∂1 ÔºåÁî®‰∫éÊèèËø∞Ë¢´Áî®Êù•ÂÅöÂõæ‰∏äÁöÑÁõëÁù£Â≠¶‰π†ÁöÑÂõæÁ•ûÁªèÁΩëÁªúÊ®°Âûã„ÄÇÊàëÂèëÁé∞ËøôÊòØ‰∏Ä‰∏™ÂæàÂ•Ω]]></description>
</item>
<item>
    <title>SICP ÁªÉ‰π† 2.27</title>
    <link>https://martinlwx.github.io/zh-cn/sicp-exercise-2-27/</link>
    <pubDate>Tue, 16 May 2023 12:41:20 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/sicp-exercise-2-27/</guid>
    <description><![CDATA[È¢òÁõÆ Modify your reverse procedure of exercise 2.18 to produce a deep-reverse procedure that taks a list as argument and returns as its value the list with its elements reversed and with all sublists deep-reversed as well. 1 2 3 4 (define x (list (list 1 2) (list 3 4))) ;; x - ((1 2) (3 4)) (deep-reverse x) ;; the output should be ((4 3) (2 1)) Á≠î]]></description>
</item>
<item>
    <title>SICP ÁªÉ‰π† 1.46</title>
    <link>https://martinlwx.github.io/zh-cn/sicp-exercise-1-46/</link>
    <pubDate>Wed, 10 May 2023 13:40:48 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/sicp-exercise-1-46/</guid>
    <description><![CDATA[Question Several of the numerical methods described in this chapter are instances of an extremely general computational strategy known as iterative improvement. Iterative improvement says that, to compute something, we start with an initial guess for the answer, test if the guess is good enough, and otherwise improve the guess and continue the process using the improved guess as the new guess. Write a procedure iterative-improve that takes two procedures]]></description>
</item>
<item>
    <title>SICP ÁªÉ‰π† 1.34</title>
    <link>https://martinlwx.github.io/zh-cn/sicp-exercise-1-34/</link>
    <pubDate>Tue, 09 May 2023 14:06:18 &#43;0800</pubDate>
    <author>MartinLwx</author>
    <guid>https://martinlwx.github.io/zh-cn/sicp-exercise-1-34/</guid>
    <description><![CDATA[È¢òÁõÆ Suppose we define the procedure f. What happens if we (perversely) ask the interpreter to evaluate the combination (f f)? 1 2 3 4 5 (define (square x) (* x x)) (define (f g) (g 2)) Then we have 1 2 3 (f square) ;; 4 (f (lambda (z) (* z (+ z 1)))) ;; 6 = 2 * 3 Á≠îÊ°à ÂõûÂøÜ‰πãÂâç‰π¶‰∏ä]]></description>
</item>
</channel>
</rss>

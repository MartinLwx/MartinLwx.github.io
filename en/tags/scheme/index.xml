<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Scheme - Tag - MartinLwx&#39;s Blog</title>
        <link>https://martinlwx.github.io/en/tags/scheme/</link>
        <description>Scheme - Tag - MartinLwx&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>martinlwx@163.com (MartinLwx)</managingEditor>
            <webMaster>martinlwx@163.com (MartinLwx)</webMaster><copyright>&lt;a rel=&#34;license noopener&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/&#34; target=&#34;_blank&#34;&gt;CC BY-NC-ND 4.0&lt;/a&gt;</copyright><lastBuildDate>Fri, 21 Apr 2023 10:18:16 &#43;0800</lastBuildDate><atom:link href="https://martinlwx.github.io/en/tags/scheme/" rel="self" type="application/rss+xml" /><item>
    <title>Solution of Proj4. Scheme Interpreter of CS61A (2021-Fall)</title>
    <link>https://martinlwx.github.io/en/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</link>
    <pubDate>Fri, 21 Apr 2023 10:18:16 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/proj4-scheme-interpreter-of-cs61a-of-ucb-fa21/</guid>
    <description><![CDATA[<h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark" aria-label="Header mark for 'Intro'"></a>Intro</h2><p>Recently, I am reading a book called <a href="https://craftinginterpreters.com/" target="_blank" rel="noopener noreferrer"><em>Crafting interpreters</em></a> written by Robert Nystrom. In the original book, a Tree-walker interpreter jlox was implemented in Java. And I am trying to rewrite in Python - <a href="https://github.com/MartinLwx/pylox" target="_blank" rel="noopener noreferrer">pylox</a>. I highly recommend itüëç. At this moment, I suddenly remembered that there were a few small issues with the Scheme interpreter for CS61A that I had not resolved after finishing it a year ago, which kept it in an unfinished state. So today I opened the project and intended to run through it from beginning to end and talk about the ideas.</p>]]></description>
</item><item>
    <title>Hw08 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/en/hw08-of-cs61a-of-ucb/</link>
    <pubDate>Mon, 28 Feb 2022 00:28:31 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/hw08-of-cs61a-of-ucb/</guid>
    <description><![CDATA[<h3 id="q1-my-filter" class="headerLink">
    <a href="#q1-my-filter" class="header-mark" aria-label="Header mark for 'Q1: My Filter'"></a>Q1: My Filter</h3><blockquote>
<p>Write a procedure <code>my-filter</code>, which takes a predicate <code>func</code> and a list <code>lst</code>, and returns a new list containing only elements of the list that satisfy the predicate. The output should contain the elements in the same order that they appeared in the original list.</p>
<p><strong>Note:</strong> Make sure that you are not just calling the built-in <code>filter</code> function in Scheme - we are asking you to re-implement this!</p>]]></description>
</item><item>
    <title>Hw07 of CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/en/hw07-of-cs61a-of-ucb/</link>
    <pubDate>Sun, 27 Feb 2022 16:58:10 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/hw07-of-cs61a-of-ucb/</guid>
    <description><![CDATA[<h3 id="q1-thane-of-cadr" class="headerLink">
    <a href="#q1-thane-of-cadr" class="header-mark" aria-label="Header mark for 'Q1: Thane of Cadr'"></a>Q1: Thane of Cadr</h3><blockquote>
<p>Define the procedures <code>cadr</code> and <code>caddr</code>, which return the second and third elements of a list, respectively. If you would like a quick refresher on scheme syntax consider looking at <a href="https://inst.eecs.berkeley.edu/~cs61a/fa21/lab/lab10/#scheme" target="_blank" rel="noopener noreferrer">Lab 10 Scheme Refresher</a>.</p>
</blockquote>
<p>We need to implement the function <code>c???r</code>. To have a better understanding of this notation, you should look from back to the front in <code>???</code>. For example, the <code>cadr</code> function will call <code>cdr</code> then call <code>car</code> on the input.</p>]]></description>
</item><item>
    <title>Lab10 - CS61A of UCB(2021-Fall)</title>
    <link>https://martinlwx.github.io/en/lab10-cs61a-of-ucb/</link>
    <pubDate>Sun, 27 Feb 2022 01:04:02 &#43;0800</pubDate><author>
        <name>MartinLwx</name>
    </author><guid>https://martinlwx.github.io/en/lab10-cs61a-of-ucb/</guid>
    <description><![CDATA[<h2 id="coding-questions" class="headerLink">
    <a href="#coding-questions" class="header-mark" aria-label="Header mark for 'Coding Questions'"></a>Coding Questions</h2><hr>
<h3 id="q2-over-or-under" class="headerLink">
    <a href="#q2-over-or-under" class="header-mark" aria-label="Header mark for 'Q2: Over or Under'"></a>Q2: Over or Under</h3><blockquote>
<p>Define a procedure <code>over-or-under</code> which takes in a number <code>num1</code> and a number <code>num2</code> and returns the following:</p>
<ul>
<li>-1 if <code>num1</code> is less than <code>num2</code></li>
<li>0 if <code>num1</code> is equal to <code>num2</code></li>
<li>1 if <code>num1</code> is greater than <code>num2</code></li>
</ul>
<blockquote>
<p>Challenge: Implement this in 2 different ways using <code>if</code> and <code>cond</code>!</p>]]></description>
</item></channel>
</rss>
